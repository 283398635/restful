<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">


    <context:component-scan base-package="com.newer.controller"/>
    <mvc:annotation-driven/>
        <!--<mvc:message-converters register-defaults="true">-->
          <!--  &lt;!&ndash; 启动Spring MVC的注解功能，完成请求和注解POJO的映射 注解请求映射
            默认是ISO-88859-1，避免乱码这里设置为UTF-8 &ndash;&gt;
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value="text/html;charset=UTF-8" />
            </bean>
            &lt;!&ndash; 启动JSON格式的配置,自动将格式转换成JSON格式，不需要其他类 &ndash;&gt;
            <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes" value="application/json;charset=UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>-->
    <!--1扫描service,dao层-->
    <context:component-scan base-package="com.*.dao,com.*.service"/>
    <!--2开启注解功能-->
    <context:annotation-config/>
    <!--3加载jdbc.properties-->
    <util:properties id="properties" location="classpath:jdbc.properties"/>

    <!--4daraSource 数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="#{properties[url]}"/>
        <property name="driverClass" value="#{properties[driver]}"/>
        <property name="user" value="#{properties[username]}"/>
        <property name="password" value="#{properties[password]}"/>
        <!--最小连接数-->
        <property name="minPoolSize" value="2"/>

        <property name="maxPoolSize" value="10"/>

        <property name="initialPoolSize" value="2"/>
        <!--最大闲置数  达到120秒没有连接就关掉连接-->
        <property name="maxIdleTime" value="120"/>
        <!--连接池耗尽之后可以追加两条连接数-->
        <property name="acquireIncrement" value="2"/>

    </bean>

    <!-- 5配置sqlSessionFactory-->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 6扫描映射器接口 将映射器接口和数据库关联-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.*.dao"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">

        <property name="dataSource" ref="dataSource"/>


    </bean>
    <!--注意导入时那个包是结尾为Tx-->
    <!--开启事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>